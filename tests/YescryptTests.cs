using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace tests
{
    [TestClass]
    public class YescryptTests
    {
        [TestMethod]
        public void DeriveKeyTest()
        {
            uint N = 2048;
            uint r = 2;
            Yescrypt yescrypt = new Yescrypt();
            byte[] dk;
            byte[] expected = new byte[] { 
                0x8f, 0x1d, 0xc5, 0xbb, 0x26, 0x35, 0x9a, 0x75, 0x7a, 0x28, 0xc0, 0x4c, 0xa6, 0x51, 0x54, 0x23,
                0xe7, 0x92, 0x99, 0x88, 0x2f, 0xe2, 0x73, 0x0e, 0x82, 0xeb, 0x82, 0xeb, 0xcf, 0x5d, 0xe8, 0x2b,
                0xee, 0xf9, 0x00, 0x5a, 0xf3, 0x01, 0x9b, 0x9c, 0xb4, 0xf2, 0xb6, 0x76, 0x16, 0x76, 0x13, 0x60,
                0xf9, 0xc6, 0x80, 0x19, 0xae, 0x57, 0x73, 0x2d, 0xaf, 0x98, 0x4a, 0x4f, 0x8c, 0x60, 0xc3, 0x09 
            };
            dk = yescrypt.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), Flags.YESCRYPT_RW_DEFAULTS, N, r, 64);
            CollectionAssert.AreEqual(expected, dk);

            expected = new byte[] {
                0x8f, 0x1d, 0xc5, 0xbb, 0x26, 0x35, 0x9a, 0x75, 0x7a, 0x28, 0xc0, 0x4c, 0xa6, 0x51, 0x54, 0x23,
                0xe7, 0x92, 0x99, 0x88, 0x2f, 0xe2, 0x73, 0x0e, 0x82, 0xeb, 0x82, 0xeb, 0xcf, 0x5d, 0xe8, 0x2b
            };
            dk = yescrypt.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), Flags.YESCRYPT_RW_DEFAULTS, N, r, 32);
            CollectionAssert.AreEqual(expected, dk);

            expected = new byte[] {
                0x8f, 0x1d, 0xc5, 0xbb, 0x26, 0x35, 0x9a, 0x75, 0x7a, 0x28, 0xc0, 0x4c, 0xa6, 0x51, 0x54, 0x23
            };
            dk = yescrypt.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), Flags.YESCRYPT_RW_DEFAULTS, N, r, 16);
            CollectionAssert.AreEqual(expected, dk);
        }
    }
}
