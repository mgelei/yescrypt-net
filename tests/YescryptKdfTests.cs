using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace tests
{
    [TestClass]
    public class YescryptKdfTests
    {
        [TestMethod]
        public void DeriveKeyTest()
        {
            YescryptKdf kdf = new YescryptKdf();
            byte[] dk;
            byte[] expected = new byte[] {
                0xbf, 0x55, 0x15, 0xcf, 0x4a, 0xf1, 0xd8, 0x39, 0xdc, 0x71, 0x92, 0xbd, 0xc2, 0x30, 0x58, 0x79, 
                0x26, 0xf2, 0x84, 0x09, 0x3c, 0x3f, 0xc0, 0xd2, 0x8e, 0x48, 0x39, 0xdd, 0xdc, 0x39, 0x88, 0xaa, 
                0x05, 0x94, 0xf4, 0xe7, 0xbd, 0xe8, 0xaf, 0x49, 0x6d, 0xde, 0x99, 0x83, 0x57, 0x61, 0x2f, 0x58,
                0xaf, 0xb4, 0x8e, 0x96, 0xd7, 0x94, 0xe0, 0xdd, 0x03, 0xeb, 0xd6, 0xc3, 0xd5, 0x70, 0x7c, 0x54 
            };
            dk = kdf.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), false, 64);
            CollectionAssert.AreEqual(expected, dk);

            expected = new byte[] {
                0xbf, 0x55, 0x15, 0xcf, 0x4a, 0xf1, 0xd8, 0x39, 0xdc, 0x71, 0x92, 0xbd, 0xc2, 0x30, 0x58, 0x79,
                0x26, 0xf2, 0x84, 0x09, 0x3c, 0x3f, 0xc0, 0xd2, 0x8e, 0x48, 0x39, 0xdd, 0xdc, 0x39, 0x88, 0xaa
            };
            dk = kdf.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), false, 32);
            CollectionAssert.AreEqual(expected, dk);

            expected = new byte[] {
                0xbf, 0x55, 0x15, 0xcf, 0x4a, 0xf1, 0xd8, 0x39, 0xdc, 0x71, 0x92, 0xbd, 0xc2, 0x30, 0x58, 0x79
            };
            dk = kdf.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), false, 16);
            CollectionAssert.AreEqual(expected, dk);
        }
    }
}
