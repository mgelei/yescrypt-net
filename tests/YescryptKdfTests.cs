using System.Text;

namespace tests
{
    [TestClass]
    public class YescryptKdfTests
    {
        [TestMethod]
        public void DeriveKeyTest()
        {
            YescryptKdf kdf = new YescryptKdf();
            byte[] dk;
            byte[] expected = new byte[] {
                0xa6,0x38,0x56,0x85,0x9c,0x64,0x2f,0x38,0x71,0x82,0xb7,0xe4,0xe8,0xe2,0xba,0x49,
                0x32,0xb7,0x47,0xdb,0x9e,0xdb,0x90,0x98,0xe6,0x07,0x54,0x88,0x57,0x3d,0x22,0x71,
                0x6e,0xf4,0x20,0xbc,0x2c,0x3b,0x77,0x9e,0x21,0x96,0x7b,0x94,0xef,0xf9,0x4a,0xc9,
                0xab,0x27,0x60,0xcc,0xce,0xd2,0x52,0x01,0xee,0x49,0x3d,0x95,0xa4,0xf3,0x03,0x8f };

            dk = kdf.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), false, 64);
            CollectionAssert.AreEqual(expected, dk);

            expected = new byte[] {
                0xa6,0x38,0x56,0x85,0x9c,0x64,0x2f,0x38,0x71,0x82,0xb7,0xe4,0xe8,0xe2,0xba,0x49,
                0x32,0xb7,0x47,0xdb,0x9e,0xdb,0x90,0x98,0xe6,0x07,0x54,0x88,0x57,0x3d,0x22,0x71
            };
            dk = kdf.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), false, 32);
            CollectionAssert.AreEqual(expected, dk);

            expected = new byte[] {
                0xa6,0x38,0x56,0x85,0x9c,0x64,0x2f,0x38,0x71,0x82,0xb7,0xe4,0xe8,0xe2,0xba,0x49
            };
            dk = kdf.DeriveKey(Encoding.ASCII.GetBytes("password"), Encoding.ASCII.GetBytes("salt"), false, 16);
            CollectionAssert.AreEqual(expected, dk);
        }
    }
}
